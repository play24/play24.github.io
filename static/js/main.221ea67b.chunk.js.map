{"version":3,"sources":["components/NumberButton.js","components/Numbers.js","logo.svg","components/Sidebar.js","components/Signbar.js","components/Solutions.js","components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["unpressedButton","padding","borderRadius","backgroundColor","width","height","fontSize","fontFamily","color","borderColor","overflow","pressedButton","emptyButton","NumberButton","handleClick","props","pressed","setNumPressed","signPressed","resetNumAndSign","gotoNextState","console","log","this","number","style","onClick","Component","tableStyle","Numbers","getPressedNumber","numPressed","numbers","n1","n2","n3","n4","updateNum","newNum","newNumSpot","press2","updateState","press2Num","eval","press1Num","pressedNum","float","numStyle","fontWeight","marginLeft","textStyle","Sidebar","getButtonStyle","isHovered","marginBottom","marginTop","lineHeight","opacity","state","hoveredIcon","gotoPreviousState","streak","showAnswer","onMouseOver","setState","onMouseLeave","marginRight","Signbar","setSignPressed","Solutions","generateAnswerList","answers","listString","length","i","open","restart","Dialog","fullWidth","maxWidth","onClose","aria-labelledby","DialogTitle","align","id","disableTypography","DialogContent","DialogContentText","Typography","variant","whiteSpace","DialogActions","justifyContent","Button","Game","gameState","num","sign","currState","prevState","setTimeout","generateNumbers","rng","Math","floor","random","nums","strings","solve24","j","nums2","strings2","k","push","pop","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.221ea67b.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst unpressedButton = {\n    padding: 0,\n    borderRadius: '4vmin',\n    // backgroundColor: '#b5f5ff',\n    backgroundColor: '#004cb8',\n    width: '20vmin',\n    height: '20vmin',\n    fontSize: '10vmin',\n    fontFamily: 'AvenirNext-Heavy',\n    color: '#ffffff',\n    // borderColor: '#1100ff',\n    borderColor: 'black',\n    overflow: 'hidden',    \n}\n\nconst pressedButton = {\n    padding: 0,\n    borderRadius: '4vmin',\n    // backgroundColor: '#b5f5ff',\n    backgroundColor: '#006aff',\n    width: '20vmin',\n    height: '20vmin',\n    fontSize: '10vmin',\n    fontFamily: 'AvenirNext-Heavy',\n    color: '#ffffff',\n    // borderColor: '#1100ff',\n    borderColor: 'black',\n    overflow: 'hidden',    \n}\n\nconst emptyButton = {\n    padding: 0,\n    borderRadius: '4vmin',\n    // backgroundColor: '#b5f5ff',\n    backgroundColor: 'transparent',\n    width: '20vmin',\n    height: '20vmin',\n    fontSize: '10vmin',\n    fontFamily: 'AvenirNext-Heavy',\n    color: 'transparent',\n    // borderColor: '#1100ff',\n    borderColor: 'transparent',\n    overflow: 'hidden',    \n}\n\n\nexport class NumberButton extends Component {\n\n    handleClick = ()=>{\n        const {pressed,setNumPressed,signPressed,resetNumAndSign,gotoNextState} = this.props\n        if (signPressed==0 || pressed){\n            console.log(signPressed)\n            console.log(pressed)\n            setNumPressed()\n        }\n        else{\n            gotoNextState()\n            resetNumAndSign()\n            setNumPressed()\n        }\n    }\n    render() {\n        const {pressed, number} = this.props\n        const style = pressed? pressedButton: unpressedButton\n        if (number == -9)\n            return (\n                <button style = {emptyButton}/>\n            )\n        return (\n            <button onClick={this.handleClick} style = {style}> {number} </button>\n        )\n    }\n}\n\nexport default NumberButton\n","import React, { Component } from 'react'\n\nimport NumberButton from './NumberButton'\n\nconst tableStyle = {\n    // float: 'right',\n    // marginRight: '27vw',\n}\n\nexport class Numbers extends Component {\n\n    getPressedNumber = (numPressed)=>{\n        const {numbers} = this.props\n        if (numPressed == 1){\n            return numbers.n1\n        }\n        else if (numPressed == 2){\n            return numbers.n2\n        }\n        else if (numPressed == 3){\n            return numbers.n3\n        }\n        else if (numPressed == 4){\n            return numbers.n4\n        }\n        return -10\n    }\n\n    updateNum = (newNum, newNumSpot)=>{\n        const {numbers} = this.props\n        if (newNumSpot == 1){\n            numbers.n1 = newNum\n        }\n        else if (newNumSpot == 2){\n            numbers.n2 = newNum\n        }\n        else if (newNumSpot == 3){\n            numbers.n3 = newNum\n        }\n        else if (newNumSpot == 4){\n            numbers.n4 = newNum\n        }\n    }\n\n    gotoNextState = (press2)=>{\n        const {numPressed,numbers,signPressed,updateState} = this.props\n        let press2Num = eval('numbers.n' + press2)\n        let press1Num = eval('numbers.n' + numPressed)\n        let newNum = 0\n        if (signPressed == 1){\n            newNum = press1Num + press2Num\n        } \n        else if (signPressed == 2){\n            newNum = press1Num - press2Num\n        } \n        else if (signPressed == 3){\n            newNum = press1Num * press2Num\n        } \n        else if (signPressed == 4){\n            if (press1Num%press2Num != 0) return\n            newNum = press1Num / press2Num\n        }\n\n        let n1 = numbers.n1\n        let n2 = numbers.n2\n        let n3 = numbers.n3\n        let n4 = numbers.n4\n\n        eval('n' + press2 + ' = ' + newNum)\n        eval('n' + numPressed + ' = ' + -9)\n        updateState(n1,n2,n3,n4)\n        \n    }\n\n    render() {\n        const {numPressed,numbers,setNumPressed,signPressed,resetNumAndSign} = this.props\n        const pressedNum = this.getPressedNumber(numPressed)\n        return (\n            <table style = {tableStyle}><tr>\n                        <th><NumberButton\n                            pressed = {numPressed==1}\n                            number = {numbers.n1}\n                            setNumPressed = {()=>setNumPressed(1)}\n                            signPressed = {signPressed}\n                            pressedNum = {pressedNum}\n                            resetNumAndSign = {resetNumAndSign}\n                            gotoNextState = {()=>this.gotoNextState(1)}\n\n                        /></th>\n                        <th><NumberButton\n                            pressed = {numPressed==2}\n                            number = {numbers.n2}\n                            setNumPressed = {()=>setNumPressed(2)}\n                            signPressed = {signPressed}\n                            pressedNum = {pressedNum}\n                            resetNumAndSign = {resetNumAndSign}\n                            gotoNextState = {()=>this.gotoNextState(2)}\n\n                        /></th>\n                    </tr>\n                    <tr>\n                        <th><NumberButton\n                            pressed = {numPressed==3}\n                            number = {numbers.n3}\n                            setNumPressed = {()=>setNumPressed(3)}\n                            signPressed = {signPressed}\n                            pressedNum = {pressedNum}\n                            resetNumAndSign = {resetNumAndSign}\n                            gotoNextState = {()=>this.gotoNextState(3)}\n\n                        /></th>\n                         <th><NumberButton\n                            pressed = {numPressed==4}\n                            number = {numbers.n4}\n                            setNumPressed = {()=>setNumPressed(4)}\n                            signPressed = {signPressed}\n                            pressedNum = {pressedNum}\n                            resetNumAndSign = {resetNumAndSign}\n                            gotoNextState = {()=>this.gotoNextState(4)}\n\n                        /></th>\n                    </tr>\n            </table>\n        )\n    }\n}\n\nexport default Numbers\n","export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { Component } from 'react'\n\nconst tableStyle = {\n    // marginLeft: '20vw',\n    // marginRight: '0vw',\n    float: 'left',\n    // width: 'auto'\n}\n\nconst numStyle = {\n    fontSize: '7.3vmin',\n    fontFamily: '',\n    color: 'black',\n    fontWeight: 'bold',\n    marginLeft: '6.25vmin'\n}\n\nconst textStyle = {\n    fontSize: '3vmin',\n    fontFamily: '',\n    color: 'black',\n    marginLeft: '5vmin',\n}\n\nexport class Sidebar extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             hoveredIcon: 0\n        }\n    }\n\n    getButtonStyle = (isHovered, fontSize, marginBottom, marginTop, marginLeft)=>{\n        return {\n            padding: 0,\n            borderRadius: '5vmin',\n            backgroundColor: 'transparent',\n            width: '7vmin',\n            height: '7vmin',\n            fontSize: fontSize,\n            fontFamily: 'AvenirNext-Heavy',\n            color: 'black',\n            // display: 'inline-flex' ,\n            // alignItems: 'center',\n            borderColor: 'transparent',\n            lineHeight: 0,\n            overflow: 'visible',\n            opacity: isHovered? 0.7: 1,\n            marginBottom: marginBottom,\n            marginTop: marginTop,\n            marginLeft: marginLeft\n        }\n    }\n \n    render() {\n        const {hoveredIcon} = this.state\n        const {gotoPreviousState,streak,showAnswer} = this.props\n        return (\n            <table style = {tableStyle}>\n                <tr>\n                    <th>\n                        <button \n                            style = {this.getButtonStyle(hoveredIcon==1, '10vmin', '5vmin', '1vmin', '-3vmin')}\n                            onMouseOver = {()=>{this.setState({hoveredIcon: 1})}}\n                            onMouseLeave = {()=>{this.setState({hoveredIcon: 0})}}\n                        > ⚙ </button>\n                    </th>\n                    <th>\n                        <button \n                            style = {this.getButtonStyle(hoveredIcon==2, '10vmin','5vmin','1vmin','-3vmin')}\n                            onMouseOver = {()=>{this.setState({hoveredIcon: 2})}}\n                            onMouseLeave = {()=>{this.setState({hoveredIcon: 0})}}\n                            onClick = {showAnswer}\n                        > ⚐ </button>\n                    </th>\n                </tr>\n                <tr>\n                    <text style = {textStyle}> Streak </text>\n                </tr>\n                <tr>\n                    <text style = {numStyle}> {streak} </text>\n                </tr>\n                <tr>\n                    <button \n                        style = {this.getButtonStyle(hoveredIcon==3, '7vmin',0,'4vmin','5vmin')}\n                        onMouseOver = {()=>{this.setState({hoveredIcon: 3})}}\n                        onMouseLeave = {()=>{this.setState({hoveredIcon: 0})}}\n                        onClick = {()=>gotoPreviousState()}\n                    > ⟲ </button>    \n                </tr>\n            </table>\n        )\n    }\n}\n\nexport default Sidebar\n","import React, { Component } from 'react'\n\nconst pressedButton = {\n    padding: 0,\n    borderRadius: '5vmin',\n    // backgroundColor: '#b5f5ff',\n    backgroundColor: '#006aff',\n    width: '10vmin',\n    height: '10vmin',\n    fontSize: '5vmin',\n    fontFamily: 'AvenirNext-Heavy',\n    color: '#ffffff',\n    // borderColor: '#1100ff',\n    borderColor: 'black',\n    overflow: 'hidden',\n    marginRight: '0.2vmin',\n    marginLeft: '0.2vmin',\n    marginTop: '0.2vmin'\n}\n\nconst unpressedButton = {\n    padding: 0,\n    borderRadius: '5vmin',\n    // backgroundColor: '#b5f5ff',\n    backgroundColor: '#004cb8',\n    width: '10vmin',\n    height: '10vmin',\n    fontSize: '5vmin',\n    fontFamily: 'AvenirNext-Heavy',\n    color: '#ffffff',\n    // borderColor: '#1100ff',\n    borderColor: 'black',\n    overflow: 'hidden',\n    marginRight: '0.2vmin',\n    marginLeft: '0.2vmin',\n    marginTop: '0.2vmin'\n}\n\nexport class Signbar extends Component {\n    render() {\n        const {setSignPressed,signPressed} = this.props\n        return (\n            <div>\n                <button onClick = {()=>setSignPressed(1)} style = {signPressed == 1? pressedButton : unpressedButton} > + </button>\n                <button onClick = {()=>setSignPressed(2)} style = {signPressed == 2? pressedButton : unpressedButton} > − </button>\n                <button onClick = {()=>setSignPressed(3)} style = {signPressed == 3? pressedButton : unpressedButton} > × </button>\n                <button onClick = {()=>setSignPressed(4)} style = {signPressed == 4? pressedButton : unpressedButton} > ÷ </button>\n            </div>\n        )\n    }\n}\n\nexport default Signbar\n","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport Switch from '@material-ui/core/Switch';\nimport Slider from '@material-ui/core/Slider';\nimport Typography from '@material-ui/core/Typography';\n\nexport class Solutions extends Component {\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             open: true\n        }\n    }\n    \n    generateAnswerList = ()=>{\n        const {answers} = this.props\n        var listString = ''\n        if  (answers.length<10){\n            for (var i = 0; i<answers.length; i++){\n                listString += answers[i] + \"\\n\"\n            }\n        }\n        else{\n            for (var i = 0; i<10; i++){\n                listString += answers[i] + \"\\n\"\n            }\n        }\n        return listString\n    }\n\n    render() {\n        const {showAnswer,restart} = this.props\n        return (\n            <Dialog\n                fullWidth={true}\n                maxWidth='xs'\n                open={showAnswer}\n                onClose={restart}\n                aria-labelledby=\"solutions\"\n            >\n                <DialogTitle align = 'center' id=\"solutions\" disableTypography = {true}><h1>Solutions</h1></DialogTitle>\n                <DialogContent>\n                <DialogContentText>\n                    <Typography\n                    align = 'center'\n                    variant= 'h4'   \n                    style={{whiteSpace: 'pre-line'}}\n                    >\n                        {this.generateAnswerList()}\n                    </Typography>\n                </DialogContentText>\n                </DialogContent>\n                <DialogActions style={{justifyContent: 'center'}}>\n                <Button \n                onClick={restart}\n                 color=\"secondary\">\n                    Restart\n                </Button>\n                </DialogActions>\n             </Dialog>\n        )\n    }\n}\n\nexport default Solutions\n","import React, { Component } from 'react'\nimport Numbers from './Numbers'\nimport Sidebar from './Sidebar'\nimport Signbar from './Signbar'\nimport Solutions from './Solutions'\n\nconst tableStyle = {\n    marginLeft: '-17.5vmin',\n    marginRight: '1vmax'\n    // marginRight: '10vh+10vmin'\n}\n\nexport class Game extends Component {\n    gameState = [\n        {n1: -1,n2: -1,n3: -1,n4: -1},\n        {n1: -1,n2: -1,n3: -1,n4: -1},\n        {n1: -1,n2: -1,n3: -1,n4: -1},\n        {n1: -1,n2: -1,n3: -1,n4: -1}\n    ]\n\n    answers = []\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             signPressed: 0,\n             numPressed: 0,\n             streak: 0,\n             currState: 0,\n             showAnswer: false\n        }\n    }\n\n    componentDidMount(){\n        this.generateNumbers()\n    }\n\n    setNumPressed = (num)=>{\n        this.setState({numPressed: num})\n    }\n\n    setSignPressed = (sign)=>{\n        const {numPressed} = this.state\n        if (numPressed != 0)\n            this.setState({signPressed: sign})\n    }\n\n    resetNumAndSign = ()=>{\n        this.setState({\n            numPressed: 0,\n            signPressed: 0\n        })\n    }\n\n    updateState = (n1,n2,n3,n4)=>{\n        this.gameState[this.state.currState+1] = {\n            n1: n1,\n            n2: n2,\n            n3: n3,\n            n4: n4\n        }\n        this.setState((prevState)=>({\n            currState: prevState.currState + 1\n        }))\n        if ( (n1==24 && n2==-9 && n3==-9 && n4==-9) || (n1==-9 && n2==24 && n3==-9 && n4==-9) || (n1==-9 && n2==-9 && n3==24 && n4==-9) || (n1==-9 && n2==-9 && n3==-9 && n4==24) ){\n            setTimeout(\n                ()=>{\n                    this.setState((prevState)=>({\n                        streak: prevState.streak + 1\n                    }))\n                    this.resetNumAndSign()\n                    this.generateNumbers()\n                },\n                250\n            )\n        }\n    }\n\n    gotoPreviousState = ()=>{\n        this.setState((prevState)=>({\n            currState: prevState.currState > 0? prevState.currState - 1: 0\n        }))\n    }\n\n    rng = ()=>{\n        return Math.floor(Math.random()*24)+1\n    }\n\n    generateNumbers = ()=>{\n        this.answers = []\n        var n1,n2,n3,n4\n        \n        while (this.answers.length == 0){\n            n1 = this.rng() \n            n2 = this.rng() \n            n3 = this.rng() \n            n4 = this.rng() \n            var nums = [n1,n2,n3,n4]\n            var strings = [n1,n2,n3,n4]\n            this.solve24(nums,strings)\n        }\n\n        this.gameState[0] = {\n            n1: n1,\n            n2: n2,\n            n3: n3,\n            n4: n4\n        }\n        this.setState({currState: 0})\n    }\n\n    showAnswer = ()=>{\n        this.setState({\n            showAnswer: true\n        })\n    }\n\n    restart = ()=>{\n        this.setState({\n            signPressed: 0,\n            numPressed: 0,\n            streak: 0,\n            currState: 0,\n            showAnswer: false\n        })\n        this.generateNumbers()\n    }\n    \n    render() {\n        const {numPressed,currState,signPressed,streak,showAnswer} = this.state\n        return (\n            <div>\n                <Solutions\n                    answers = {this.answers}\n                    showAnswer = {showAnswer}\n                    restart = {this.restart}\n                />\n                <h1>Play 24</h1>\n                <center>\n                <table style = {tableStyle}><tr><td>\n                <Sidebar\n                    gotoPreviousState = {this.gotoPreviousState}\n                    streak = {streak}\n                    showAnswer = {this.showAnswer}\n                />\n                </td><td>\n                <Numbers\n                    numPressed = {numPressed}\n                    numbers = {this.gameState[currState]}\n                    setNumPressed = {this.setNumPressed}\n                    signPressed = {signPressed}\n                    resetNumAndSign = {this.resetNumAndSign}\n                    updateState = {this.updateState}\n                />\n                </td></tr></table>        \n                </center>\n                <Signbar\n                    signPressed = {signPressed}\n                    setSignPressed = {this.setSignPressed}\n                />\n            </div>\n        )\n    }\n\n    solve24 = (nums,strings)=>{\n        if (nums.length == 0) return\n        if (nums.length == 1){\n            if (nums[0] == 24){\n                this.answers.push(strings[0])\n            }\n            return\n        }\n        for (var i = 0; i<nums.length; i++){\n            for (var j = 0; j<nums.length; j++){\n                if (i!=j){\n                    var nums2 = []\n                    var strings2 = []\n                    for (var k = 0; k<nums.length; k++){\n                        if (k!=i && k!=j){\n                            nums2.push(nums[k])\n                            strings2.push(strings[k])\n                        }\n                    }\n                    for (var k = 0; k<4; k++){\n                        if (k<2 && j>i) continue\n                        if (k==0){\n                            nums2.push(nums[i]+nums[j])\n                            strings2.push('(' + strings[i] + '+' + strings[j] + ')')\n                        }\n                        if (k==1){\n                            nums2.push(nums[i]*nums[j])\n                            strings2.push('(' + strings[i] + '×' + strings[j] + ')')\n                        }\n                        if (k==2){\n                            nums2.push(nums[i]-nums[j])\n                            strings2.push('(' + strings[i] + '−' + strings[j] + ')')\n                        }\n                        if (k==3){\n                            if (nums[j]!=0 && nums[i]%nums[j]==0){\n                                nums2.push(nums[i]/nums[j])\n                                strings2.push('(' + strings[i] + '÷' + strings[j] + ')')\n                            } else {continue}\n                        }\n                        this.solve24(nums2,strings2)\n                        nums2.pop()\n                        strings2.pop()\n                    }\n                }\n            }\n        }\n    }\n}\n\nexport default Game\n","import logo from './logo.svg';\nimport './App.css';\nimport Game from './components/Game';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Game/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}